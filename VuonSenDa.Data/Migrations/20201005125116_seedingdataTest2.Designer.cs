// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VuonSenDaShop.Data.EF;

namespace VuonSenDaShop.Data.Migrations
{
    [DbContext(typeof(VuonSenDaShopDbContext))]
    [Migration("20201005125116_seedingdataTest2")]
    partial class seedingdataTest2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");

                    b.HasData(
                        new
                        {
                            Key = "HomeTitle",
                            Value = "This is home page of Vuon Sen Da"
                        },
                        new
                        {
                            Key = "HomeKeyword",
                            Value = "This is keyword of Vuon Sen Da"
                        },
                        new
                        {
                            Key = "HomeDescription",
                            Value = "This is description of Vuon Sen Da"
                        });
                });

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.Language", b =>
                {
                    b.Property<string>("LanguageId")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageId = "vi-VN",
                            IsDefault = true,
                            Name = "Tiếng Việt"
                        },
                        new
                        {
                            LanguageId = "en-US",
                            IsDefault = false,
                            Name = "English"
                        });
                });

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 10, 5, 19, 51, 15, 725, DateTimeKind.Local).AddTicks(2493));

                    b.Property<string>("ShipAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ShipEmail")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ShipPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ApplyForAll")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExternalTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.AdminAccount", b =>
                {
                    b.Property<int>("AdminAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("AdminAccountCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("AdminAccountId");

                    b.HasIndex("AdminAccountCategoryId");

                    b.ToTable("AdminAccounts");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.AdminAccountCategory", b =>
                {
                    b.Property<int>("AdminAccountCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("AdminAccountCategoryId");

                    b.ToTable("AdminAccountCategorys");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ArticleName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dercription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("ViewCount")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<int>("ViewTime")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.HasKey("ArticleId");

                    b.HasIndex("ArticleCategoryId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ArticleCategory", b =>
                {
                    b.Property<int>("ArticleCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleCategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("ArticleMainCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dercription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.HasKey("ArticleCategoryId");

                    b.HasIndex("ArticleMainCategoryId");

                    b.ToTable("ArticleCategories");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ArticleMainCategory", b =>
                {
                    b.Property<int>("ArticleMainCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleMainCategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dercription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.HasKey("ArticleMainCategoryId");

                    b.ToTable("ArticleMainCategories");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ClientAccount", b =>
                {
                    b.Property<int>("ClientAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.HasKey("ClientAccountId");

                    b.ToTable("ClientAccounts");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 10, 5, 19, 51, 15, 721, DateTimeKind.Local).AddTicks(4775));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 10, 5, 19, 51, 15, 734, DateTimeKind.Local).AddTicks(5266));

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("PictureId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dercription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.Property<int>("ViewTime")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Avatar = "hinh",
                            CreateBy = "Admin",
                            Dercription = "Sen Dù Hồng 3-5cm (Chậu Nhựa)",
                            Details = "Sen Dù Hồng 3-5cm (Chậu Nhựa)",
                            OriginalPrice = 25000m,
                            Position = 0,
                            Price = 20000m,
                            ProductCategoryId = 1,
                            ProductName = "Sen Dù Hồng 3-5cm (Chậu Nhựa)",
                            Status = 1,
                            Stock = 0,
                            ViewCount = 0,
                            ViewTime = 0
                        },
                        new
                        {
                            ProductId = 2,
                            Avatar = "hinh",
                            CreateBy = "Admin",
                            Dercription = "Sen Dù Hồng 5-10cm ",
                            Details = "Sen Dù Hồng 5-10cm ",
                            OriginalPrice = 45000m,
                            Position = 0,
                            Price = 40000m,
                            ProductCategoryId = 2,
                            ProductName = "Sen Dù Hồng 5-10cm ",
                            Status = 1,
                            Stock = 0,
                            ViewCount = 0,
                            ViewTime = 0
                        },
                        new
                        {
                            ProductId = 3,
                            Avatar = "hinh",
                            CreateBy = "Admin",
                            Dercription = "Xương Rồng Thần Long 7-9cm (Chậu Nhựa) ",
                            Details = "Xương Rồng Thần Long 7-9cm (Chậu Nhựa) ",
                            OriginalPrice = 55000m,
                            Position = 0,
                            Price = 50000m,
                            ProductCategoryId = 3,
                            ProductName = "Xương Rồng Thần Long 7-9cm (Chậu Nhựa) ",
                            Status = 1,
                            Stock = 0,
                            ViewCount = 0,
                            ViewTime = 0
                        });
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dercription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("ProductMainCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("ProductMainCategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = 1,
                            Avatar = "hinh",
                            CreateBy = "Admin",
                            Dercription = "Sen đá cỡ nhỏ",
                            Position = 0,
                            ProductCategoryName = "Sen đá cỡ nhỏ",
                            ProductMainCategoryId = 1,
                            Status = 1
                        },
                        new
                        {
                            ProductCategoryId = 2,
                            Avatar = "hinh",
                            CreateBy = "Admin",
                            Dercription = "Sen đá cỡ Lớn",
                            Position = 0,
                            ProductCategoryName = "Sen đá cỡ Lớn",
                            ProductMainCategoryId = 1,
                            Status = 1
                        },
                        new
                        {
                            ProductCategoryId = 3,
                            Avatar = "hinh",
                            CreateBy = "Admin",
                            Dercription = "Xương Rồng",
                            Position = 0,
                            ProductCategoryName = "Xương Rồng",
                            ProductMainCategoryId = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductCategoryTranslation", b =>
                {
                    b.Property<int>("ProductCategoryTranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dercription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategoryTranslationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProductCategoryTranslationId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductCategoryTranslations");

                    b.HasData(
                        new
                        {
                            ProductCategoryTranslationId = 1,
                            LanguageId = "vi-VN",
                            ProductCategoryId = 1,
                            ProductCategoryTranslationName = "Sen đá cỡ nhỏ",
                            SeoAlias = "sen-da-co-nho",
                            SeoDescription = "Sen đá cỡ nhỏ",
                            SeoTitle = "Sen đá cỡ nhỏ"
                        },
                        new
                        {
                            ProductCategoryTranslationId = 2,
                            LanguageId = "en-US",
                            ProductCategoryId = 1,
                            ProductCategoryTranslationName = "Small Stone Lotus",
                            SeoAlias = "Small-Stone-Lotus",
                            SeoDescription = "Small Stone Lotus",
                            SeoTitle = "Small Stone Lotus"
                        },
                        new
                        {
                            ProductCategoryTranslationId = 3,
                            LanguageId = "vi-VN",
                            ProductCategoryId = 2,
                            ProductCategoryTranslationName = "Sen đá cỡ Lớn",
                            SeoAlias = "Sen-Da-Co-Lon",
                            SeoDescription = "Sen đá cỡ Lớn",
                            SeoTitle = "Sen đá cỡ Lớn"
                        },
                        new
                        {
                            ProductCategoryTranslationId = 4,
                            LanguageId = "en-US",
                            ProductCategoryId = 2,
                            ProductCategoryTranslationName = "Big Stone Lotus",
                            SeoAlias = "Big-Stone-Lotus",
                            SeoDescription = "Big Stone Lotus",
                            SeoTitle = "Big Stone Lotus"
                        },
                        new
                        {
                            ProductCategoryTranslationId = 5,
                            LanguageId = "vi-VN",
                            ProductCategoryId = 3,
                            ProductCategoryTranslationName = "Xương Rồng",
                            SeoAlias = "Xuong-Rong",
                            SeoDescription = "Sen đá cỡ Lớn",
                            SeoTitle = "Sen đá cỡ Lớn"
                        },
                        new
                        {
                            ProductCategoryTranslationId = 6,
                            LanguageId = "en-US",
                            ProductCategoryId = 3,
                            ProductCategoryTranslationName = "Cactus",
                            SeoAlias = "Cactus",
                            SeoDescription = "Cactus",
                            SeoTitle = "Cactus"
                        });
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductMainCategory", b =>
                {
                    b.Property<int>("ProductMainCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dercription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("ProductMainCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.HasKey("ProductMainCategoryId");

                    b.ToTable("ProductMainCategories");

                    b.HasData(
                        new
                        {
                            ProductMainCategoryId = 1,
                            Avatar = "hinh",
                            CreateBy = "Admin",
                            Dercription = "Sen đá bịch/chậu nhựa",
                            Position = 0,
                            ProductMainCategoryName = "Sen đá bịch/chậu nhựa",
                            Status = 1
                        },
                        new
                        {
                            ProductMainCategoryId = 2,
                            Avatar = "hinh",
                            CreateBy = "Admin",
                            Dercription = "Xương rồng",
                            Position = 0,
                            ProductMainCategoryName = "Xương rồng",
                            Status = 1
                        });
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductMainCategoryTranslation", b =>
                {
                    b.Property<int>("ProductMainCategoryTranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("ProductMainCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductMainCategoryTranslationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProductMainCategoryTranslationId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductMainCategoryId");

                    b.ToTable("ProductMainCategoryTranslations");

                    b.HasData(
                        new
                        {
                            ProductMainCategoryTranslationId = 1,
                            LanguageId = "vi-VN",
                            ProductMainCategoryId = 1,
                            ProductMainCategoryTranslationName = "Sen đá bịch/chậu nhựa",
                            SeoAlias = "sen-da-bich-chau-nhua",
                            SeoDescription = "Sen đá bịch/chậu nhựa",
                            SeoTitle = "Sen đá bịch/chậu nhựa"
                        },
                        new
                        {
                            ProductMainCategoryTranslationId = 2,
                            LanguageId = "en-US",
                            ProductMainCategoryId = 1,
                            ProductMainCategoryTranslationName = "Stone Lotus Plastic Pots",
                            SeoAlias = "Stone-Lotus-Plastic-Pots",
                            SeoDescription = "Stone-Lotus-Plastic-Pots",
                            SeoTitle = "Stone-Lotus-Plastic-Pots"
                        },
                        new
                        {
                            ProductMainCategoryTranslationId = 3,
                            LanguageId = "vi-VN",
                            ProductMainCategoryId = 2,
                            ProductMainCategoryTranslationName = "Xương rồng",
                            SeoAlias = "Xuong-Rong",
                            SeoDescription = "Xương rồng",
                            SeoTitle = "Xương rồng"
                        },
                        new
                        {
                            ProductMainCategoryTranslationId = 4,
                            LanguageId = "en-US",
                            ProductMainCategoryId = 2,
                            ProductMainCategoryTranslationName = "Cactus",
                            SeoAlias = "Cactus",
                            SeoDescription = "Cactus",
                            SeoTitle = "Cactus"
                        });
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductTranslation", b =>
                {
                    b.Property<int>("ProductTranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dercription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductTranslationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProductTranslationId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTranslations");

                    b.HasData(
                        new
                        {
                            ProductTranslationId = 1,
                            LanguageId = "vi-VN",
                            ProductId = 1,
                            ProductTranslationName = "Sen Dù Hồng 3-5cm (Chậu Nhựa)",
                            SeoAlias = "sen-du-hong-3-5cm",
                            SeoDescription = "Sen Dù Hồng 3-5cm (Chậu Nhựa)",
                            SeoTitle = "Sen Dù Hồng 3-5cm (Chậu Nhựa)"
                        },
                        new
                        {
                            ProductTranslationId = 2,
                            LanguageId = "en-US",
                            ProductId = 1,
                            ProductTranslationName = "Stone Lotus Du Hong 3-5cm (Plastic pots)",
                            SeoAlias = "Stone-Lotus-Du-Hong-3-5cm-(Plastic-pots)",
                            SeoDescription = "Stone Lotus Du Hong 3-5cm (Plastic pots)",
                            SeoTitle = "Stone Lotus Du Hong 3-5cm (Plastic pots)"
                        },
                        new
                        {
                            ProductTranslationId = 3,
                            LanguageId = "vi-VN",
                            ProductId = 2,
                            ProductTranslationName = "Sen Dù Hồng 5-10cm ",
                            SeoAlias = "sen-du-hong-3-5cm",
                            SeoDescription = "Sen Dù Hồng 3-5cm ",
                            SeoTitle = "Sen Dù Hồng 3-5cm "
                        },
                        new
                        {
                            ProductTranslationId = 4,
                            LanguageId = "en-US",
                            ProductId = 2,
                            ProductTranslationName = "Stone Lotus Du Hong 5-10cm ",
                            SeoAlias = "Stone-Lotus-Du-Hong-5-10cm",
                            SeoDescription = "Stone Lotus Du Hong 5-10cm",
                            SeoTitle = "Stone Lotus Du Hong 5-10cm"
                        },
                        new
                        {
                            ProductTranslationId = 5,
                            LanguageId = "vi-VN",
                            ProductId = 3,
                            ProductTranslationName = "Xương Rồng Thần Long 7-9cm (Chậu Nhựa) ",
                            SeoAlias = "xuong-rong-than-long",
                            SeoDescription = "Xương Rồng Thần Long 7-9cm (Chậu Nhựa) ",
                            SeoTitle = "Xương Rồng Thần Long 7-9cm (Chậu Nhựa) "
                        },
                        new
                        {
                            ProductTranslationId = 6,
                            LanguageId = "en-US",
                            ProductId = 3,
                            ProductTranslationName = "Dragon Spirit Cactus 7-9cm (Plastic Pots)",
                            SeoAlias = "Dragon-Spirit-Cactus-7-9cm-Plastic Pots",
                            SeoDescription = "Dragon Spirit Cactus 7-9cm (Plastic Pots)",
                            SeoTitle = "Dragon Spirit Cactus 7-9cm (Plastic Pots)"
                        });
                });

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.Cart", b =>
                {
                    b.HasOne("VuonSenDaShop.Data.Entities.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopOnlineGamingPC.Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("ShopOnlineGamingPC.Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VuonSenDaShop.Data.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.AdminAccount", b =>
                {
                    b.HasOne("VuonSenDaShop.Data.Entities.AdminAccountCategory", "AdminAccountCategory")
                        .WithMany("AdminAccounts")
                        .HasForeignKey("AdminAccountCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.Article", b =>
                {
                    b.HasOne("VuonSenDaShop.Data.Entities.ArticleCategory", "ArticleCategory")
                        .WithMany("Articles")
                        .HasForeignKey("ArticleCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ArticleCategory", b =>
                {
                    b.HasOne("VuonSenDaShop.Data.Entities.ArticleMainCategory", "ArticleMainCategory")
                        .WithMany("ArticleCategories")
                        .HasForeignKey("ArticleMainCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.Product", b =>
                {
                    b.HasOne("VuonSenDaShop.Data.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductCategory", b =>
                {
                    b.HasOne("VuonSenDaShop.Data.Entities.ProductMainCategory", "ProductMainCategory")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductMainCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductCategoryTranslation", b =>
                {
                    b.HasOne("ShopOnlineGamingPC.Data.Entities.Language", "Language")
                        .WithMany("ProductCategoryTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VuonSenDaShop.Data.Entities.ProductCategory", "ProductCategory")
                        .WithMany("ProductCategoryTranslations")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductMainCategoryTranslation", b =>
                {
                    b.HasOne("ShopOnlineGamingPC.Data.Entities.Language", "Language")
                        .WithMany("ProductMainCategoryTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VuonSenDaShop.Data.Entities.ProductMainCategory", "ProductMainCategory")
                        .WithMany("ProductMainCategoryTranslations")
                        .HasForeignKey("ProductMainCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VuonSenDaShop.Data.Entities.ProductTranslation", b =>
                {
                    b.HasOne("ShopOnlineGamingPC.Data.Entities.Language", "Language")
                        .WithMany("ProductTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VuonSenDaShop.Data.Entities.Product", "Product")
                        .WithMany("ProductTranslations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
